---
- hosts: vault
  remote_user: ubuntu
  gather_facts: False
  vars_files:
    - vars.yml
  # hack for ubuntu 16.04
  vars:
    ansible_python_interpreter: "/usr/bin/python2.7"
  tasks:
    # wait for host to be available
    - name: waiting for server to accept SSH connections
      local_action:
        wait_for host="{{ inventory_hostname }}"
        port=22
        state=started
    - name: update apt cache
      raw: "sudo apt-get update"
    - name: install python 2.7 and aptitude
      raw: "sudo apt-get install -qq python2.7 aptitude"
    - name: get instance hostname
      shell:
        cmd: cat /etc/hostname
      register: instance_hostname
    - name: add hostname to /etc/hosts
      shell:
        cmd: echo "127.0.0.1 {{ instance_hostname }}" | sudo tee -a /etc/hosts
    - name: add docker repo key with apt
      become: yes
      apt_key:
        id: "{{ docker_apt_key_id }}"
        keyserver: "{{ docker_apt_key_url }}"
        state: present
    - name: add docker repository to sources.list
      shell:
        cmd: echo "deb https://apt.dockerproject.org/repo ubuntu-xenial main" | sudo tee /etc/apt/sources.list.d/docker.list
    - name: update apt cache
      become: yes
      apt:
        update_cache: yes
    - name: upgrade to latest
      become: yes
      apt:
        upgrade: safe
    - name: update kernel
      raw: "sudo apt-get install -qq linux-image-extra-$(uname -r) linux-image-extra-virtual"
    - name: install docker and extra apt packages
      become: yes
      apt:
        pkg: "{{ item }}"
        state: present
      with_items: "{{ apt_packages }}"
    - name: install docker-py
      become: yes
      pip:
        name: "docker-py"
        version: "1.9.0"
      environment:
        LC_ALL: "C"
    - name: add `ubuntu` to docker group
      user:
        append: yes
        groups: docker
        name: ubuntu
      become: yes
    - name: pull vault image
      become: yes
      docker_image:
        name: vault
        tag: 0.6
        state: present
    - name: run vault container
      become: yes
      docker_container:
        name: vault
        image: vault:0.6
        pull: yes
        restart_policy: always
        restart: yes
        published_ports:
          - 8200:8200
        env:
          VAULT_DEV_ROOT_TOKEN_ID: myroot
